#!/bin/bash

set -o pipefail
set -e

for opt in "$@"; do
  case "$opt" in
    "--list-options")
      echo --list-options
      echo --profile
      echo --no-cache
      echo --forward
      echo --local-port
      echo --remote-port
      echo --remote-host
      exit
      ;;
    "--profile")
      if [ -n "$2" ]; then
        profile="$2"
        shift 2
      else
        shift 1
      fi
      ;;
    "--no-cache")
      nocache=1
      shift 1
      ;;
    "--forward")
      if [ -n "$2" ]; then
        case "$2" in
          local|remote)
            forward="$2"
            ;;
        esac
        shift 2
      else
        shift 1
      fi
      ;;
    "--local-port")
      if [ -n "$2" ]; then
        local_port="$2"
        shift 2
      else
        shift 1
      fi
      ;;
    "--remote-port")
      if [ -n "$2" ]; then
        remote_port="$2"
        shift 2
      else
        shift 1
      fi
      ;;
    "--remote-host")
      if [ -n "$2" ]; then
        remote_host="$2"
        shift 2
      else
        shift 1
      fi
      ;;
  esac
done


profile=${profile:-"default"}
nocache=${nocache:-0}
os_user=${os_user:-"ec2-user"}
forward=${forward:-""}
local_port=${local_port:-"3000"}
remote_port=${remote_port:-"3000"}
remote_host=${remote_host:-"localhost"}


if [ $nocache -eq 1 ]; then
  nocache_param="--no-cache"
else
  nocache_param=""
fi

instances=$(saw ec2 list-instances --profile $profile --output json $nocache_param)
[ -z "$instances" ] && exit
instance=$(echo "$instances" | jq -r '.launchtime = (.launchtime[:19])|.tags = (.tags|to_entries|[.[].value]|join("/"))|to_entries|[.[].value|.//"--"]|join(",")' | column -t -s ',' | fzf)
[ -z "$instance" ] && exit
instance_id=$(echo "$instance" | awk '{print $1}')
az=$(jq -r "select(.instanceid == \"$instance_id\")|.az" <<< "$instances")

echo "Generating key pair..."
temp_path=$(mktemp -u ~/.ssh/tmp.XXXXXXXXXX)
ssh-keygen -t rsa -b 4096 -N '' -C '' -f $temp_path > /dev/null
trap "rm $temp_path $temp_path.pub; echo; date" EXIT

echo "Send temporary public key to $instance_id ..."
AWS_PAGER= aws ec2-instance-connect send-ssh-public-key \
  --profile $profile \
  --instance-id $instance_id \
  --instance-os-user $os_user \
  --availability-zone $az \
  --ssh-public-key file://$temp_path.pub

proxy_cmd="sh -c 'aws ssm start-session --profile $profile --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p'"
ssh_cmd="ssh -i $temp_path -l $os_user -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
case "$forward" in
  local)
    date
    echo "localhost:$local_port -> $remote_host:$remote_port"
    echo "http://localhost:$local_port"
    $ssh_cmd \
      -o ProxyCommand="$proxy_cmd" \
      -N -L $local_port:$remote_host:$remote_port \
      $instance_id
    ;;
  remote)
    date
    echo "remotehost:$remote_port -> localhost:$local_port"
    $ssh_cmd \
      -o ProxyCommand="$proxy_cmd" \
      -N -R $remote_port:localhost:$local_port \
      $instance_id
    ;;
  *)
    $ssh_cmd \
      -o ProxyCommand="$proxy_cmd" \
      $instance_id
    ;;
esac
