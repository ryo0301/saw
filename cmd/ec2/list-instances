#!/bin/bash

set -o pipefail
set -e

for opt in "$@"; do
  case "$opt" in
    "--list-options")
      echo --list-options
      echo --profile
      echo --no-cache
      exit
      ;;
    "--profile")
      if [ -n "$2" ]; then
        profile="$2"
        shift 2
      else
        shift 1
      fi
      ;;
    "--no-cache")
      nocache=1
      shift 1
      ;;
  esac
done


profile=${profile:-"default"}
nocache=${nocache:-0}

if [ -n "$SAW_DIR_CACHE" ]; then
  cache_prefix="$SAW_DIR_CACHE/ec2/${profile}"
  cache_path="${cache_prefix}/instancelist"
fi

do_desc_instances=0
if [ $nocache -eq 1 ]; then
  do_desc_instances=1
elif [ ! -r "$cache_path" ]; then
  do_desc_instances=1
elif [ -z "$(find $cache_path -mmin -60)" ]; then
  do_desc_instances=1
fi

if [ $do_desc_instances -eq 1 ]; then
  query='Reservations[].Instances[].{"1instance-id":InstanceId,"2name":Tags[?Key==`Name`].Value|[0],"3state":State.Name,"4private-ip":PrivateIpAddress,"5az":Placement.AvailabilityZone,"6instance-type":InstanceType,"7launch-time":LaunchTime,"8public-ip":PublicIpAddress}|sort_by(@,&"7launch-time")|reverse(@)'
  list=$(aws ec2 describe-instances --profile "$profile" --query "$query" --output text)
  if [ -n "$cache_path" ]; then
    mkdir -p $cache_prefix
    echo "$list" > $cache_path
  fi
else
  list=$(cat $cache_path)
fi

echo "$list" | awk '{print $1,$2,$3,$4,$5,$6,substr($7,0,19),$8}' | column -t | peco
